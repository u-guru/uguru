@import 'mixin';

/* ---------- COLLECTIONS */
.collection {
	@include listless;
	margin: 15px 0;
	border: 1px solid $smoke;
	border-radius: 2px;
	overflow: hidden;
	position: relative;
	color: $charcoal;
	.collection-item {
		background: white;
		line-height: 1.5rem;
		padding: 10px 20px;
		margin: 0;
		border-bottom: 1px solid $smoke;
		// Avatar Collection
		&.avatar {
			min-height: 84px;
			padding-left: 72px;
			position: relative;
			.circle {
				position: absolute;
				width: 42px;
				height: 42px;
				overflow: hidden;
				left: 15px;
				display: inline-block;
				vertical-align: middle;
			}
			i.circle {
				font-size: 18px;
				line-height: 42px;
				color: white;
				text-align: center;
			}
			.title {
				font-size: 16px;
				font-weight: 600;
			}
			p {
				margin: 0;
				font-size: 16px;
			}
			.secondary-content {
				position: absolute;
				top: 16px;
				right: 16px;
			}
		}
		&:last-child {
			border-bottom: none;
		}
		&.active {
			background: $shamrock;
			color: white;
			.secondary-content {
				color: white;
			}
		}
	}
	a.collection-item {
		display: block;
		@include transition(.25s);
		color: $campus;
		&:not(.active) {
			&:hover {
				background: $smoke;
			}
			&:active {
				background: $campus;
				color: rgba(white,.75);
			}
		}
	}
	&.with-header {
		.collection-header {
			background: $smoke;
			border-bottom: 1px solid $smoke;
			padding: 10px 20px;
			h4 {
				font-size: 32px;
				font-weight: 600;
			}
		}
		.collection-item.avatar {
			padding-left: 72px;
		}
	}
}

// Made less specific to allow easier overriding
.secondary-content {
	display: block;
	float: right;
	color: white;
	svg {
		@include round;
		display: block;
		width: 24px;
		height: 24px;
		padding: 4px;
		path {
			stroke: white;
			stroke-width: 8px;
			stroke-linecap: round;
			stroke-linejoin: round;
			fill: none;
		}
		&.filled {
			&:hover, &:active {
				@include opacity(.75);
			}
		}
		&.outline {
			background: transparent;
			padding: 2px;
			&.bg-charcoal {
				border: 2px solid $charcoal;
				path {
					stroke: $charcoal;
				}
				&:hover, &:active {
					background: $charcoal;
				}
			}
			&.bg-slate {
				border: 2px solid $slate;
				path {
					stroke: $slate;
				}
				&:hover, &:active {
					background: $slate;
				}
			}
			&.bg-taupe {
				border: 2px solid $taupe;
				path {
					stroke: $taupe;
				}
				&:hover, &:active {
					background: $taupe;
				}
			}
			&.bg-campus {
				border: 2px solid $campus;
				path {
					stroke: $campus;
				}
				&:hover, &:active {
					background: $campus;
				}
			}
			&.bg-cerise {
				border: 2px solid $cerise;
				path {
					stroke: $cerise;
				}
				&:hover, &:active {
					background: $cerise;
				}
			}
			&.bg-orange {
				border: 2px solid $orange;
				path {
					stroke: $orange;
				}
				&:hover, &:active {
					background: $orange;
				}
			}
			&.bg-gold {
				border: 2px solid $gold;
				path {
					stroke: $gold;
				}
				&:hover, &:active {
					background: $gold;
				}
			}
			&.bg-moola {
				border: 2px solid $moola;
				path {
					stroke: $moola;
				}
				&:hover, &:active {
					background: $moola;
				}
			}
			&.bg-shamrock {
				border: 2px solid $shamrock;
				path {
					stroke: $shamrock;
				}
				&:hover, &:active {
					background: $shamrock;
				}
			}
			&.bg-azure {
				border: 2px solid $azure;
				path {
					stroke: $azure;
				}
				&:hover, &:active {
					background: $azure;
				}
			}
			&.bg-lake {
				border: 2px solid $lake;
				path {
					stroke: $lake;
				}
				&:hover, &:active {
					background: $lake;
				}
			}
			&.bg-eggplant {
				border: 2px solid $eggplant;
				path {
					stroke: $eggplant;
				}
				&:hover, &:active {
					background: $eggplant;
				}
			}
			&:hover, &:active {
				path {
					stroke: white;
				}
			}
		}
	}
}
.collapsible .collection {
	margin: 0;
	border: none;
}

/* ---------- BADGES */
// Badges
span.badge {
	min-width: 48px;
	padding: 0 6px;
	text-align: center;
	font-size: 14px;
	line-height: inherit;
	color: $slate;
	position: absolute;
	right: 15px;
	@include box-sizing;
	&.new {
		@include round;
		font-size: 12px;
		color: white;
	}
	&.new:after {
		content: " new";
	}
}
nav ul a span.badge {
	position: static;
	margin-left: 4px;
	line-height: 0;
}
a.collection-item {
	&:not(.active) {
		&:active {
			span.badge {
				background: white;
				color: $campus;
			}
		}
	}
}

/* ---------- CARDS */
.card-panel {
	padding: 15px;
	margin: 15px 0 15px;
	border-radius: 2px;
}
.card {
	position: relative;
	overflow: hidden;
	margin: 15px 0 15px;
	border-radius: 2px;
	.card-title {
		font-size: 24px;
		font-weight: 900;
		&.activator {
			cursor: pointer;
		}
	}
	// Card Sizes
	&.small,
	&.medium,
	&.large {
		position: relative;
		.card-image {
			overflow: hidden;
		}
		.card-content {
			overflow: hidden;
		}
		.card-action {
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
		}
	}
	&.small {
		height: 300px;
		.card-image {
			height: 150px;
		}
		.card-content {
			height: 150px;
		}
	}
	&.medium {
		height: 400px;
		.card-image {
			height: 250px;
		}
		.card-content {
			height: 150px;
		}
	}
	&.large {
		height: 500px;
		.card-image {
			height: 330px;
		}
		.card-content {
			height: 170px;
		}
	}
	.card-image {
		position: relative;
		// Image background for content
		img {
			display: block;
			border-radius: 2px 2px 0 0;
			position: relative;
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
			width: 100%;
		}
		.card-title {
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			padding: 45px 15px 15px;
			background: -moz-linear-gradient(top, rgba($slate,0) 0%, rgba($slate,.3) 80%, rgba($slate,.3) 100%);
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba($slate,0)), color-stop(80%,rgba($slate,.3)), color-stop(100%,rgba($slate,.3)));
			background: -webkit-linear-gradient(top, rgba($slate,0) 0%,rgba($slate,.3) 80%,rgba($slate,.3) 100%);
			background: -o-linear-gradient(top, rgba($slate,0) 0%,rgba($slate,.3) 80%,rgba($slate,.3) 100%);
			background: -ms-linear-gradient(top, rgba($slate,0) 0%,rgba($slate,.3) 80%,rgba($slate,.3) 100%);
			background: linear-gradient(to bottom, rgba($slate,0) 0%,rgba($slate,.3) 80%,rgba($slate,.3) 100%);
			filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002b3234', endColorstr='#4d2b3234',GradientType=0 );
			text-shadow: 0 0 20px rgba($charcoal,.2);
		}
	}
	.card-content {
		padding: 15px;
		border-radius: 0 0 2px 2px;
		p {
			margin: 0;
			color: inherit;
		}
		.card-title {
			display: block;
			padding-bottom: 5px;
			i {
				padding-top: 4px;
			}
		}
	}
	.card-action {
		border-top: 1px solid rgba($smoke,.2);
		padding: 15px;
		font-size: 16px;
		line-height: 1.2;
		a {
			color: $campus;
			margin-right: 15px;
			@include transition(.3s ease);
			text-transform: uppercase;
			&:hover {
				color: $gold;
			}
		}
	}
	.card-content.txt-slate + .card-action {
		border-top-color: rgba($campus,.3);
	}
	.card-reveal {
		padding: 15px;
		position: absolute;
		background: white;
		width: 100%;
		overflow-y: auto;
		top: 100%;
		height: 100%;
		z-index: 1;
		display: none;
		.card-title {
			cursor: pointer;
			display: block;
			i {
				padding-top: 4px;
			}
		}
	}
	&.bg-white {
		.card-action {
			a {
				&:hover {
					color: $orange;
				}
			}
		}
	}
}

/* ---------- CHIPS */
.chip {
	display: inline-block;
	position: relative;
	height: 32px;
	font-size: 13px;
	font-weight: 600;
	color: white;
	line-height: 32px;
	padding: 0 12px;
	border-radius: 16px;
	img {
		float: left;
		margin: 0 8px 0 -12px;
		padding: 2px;
		height: 32px;
		width: 32px;
		border-radius: 50%;
	}
	i.material-icons {
		cursor: pointer;
		float: right;
		font-size: 16px;
		line-height: 32px;
		padding-left: 8px;
	}
	&.bg-smoke {
		color: rgba($charcoal,.7);
	}
	&[class*="arrow"] {
		border-radius: 2px;
		svg {
			position: absolute;
			width: 20px;
			height: 10px;
		}
		&.arrow-up {
			margin-top: 20px;
			svg {
				@include center-x;
				top: -10px;
			}
		}
		&.arrow-down {
			margin-bottom: 20px;
			svg {
				@include center-x;
				@include transform(translateX(-50%) rotate(180deg));
				@include transform-origin(center center);
				bottom: -10px;
			}
		}
		&.arrow-left {
			margin-left: 20px;
			svg {
				@include center-y;
				@include transform(translateY(-50%) rotate(-90deg));
				@include transform-origin(center center);
				left: -15px;
			}
		}
		&.arrow-right {
			margin-right: 20px;
			svg {
				@include center-y;
				@include transform(translateY(-50%) rotate(90deg));
				@include transform-origin(center center);
				right: -15px;
			}
		}
		&[class*="bg-white"] {
			svg {
				fill: white;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba(white, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba(white, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba(white, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba(white, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba(white, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba(white, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba(white, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba(white, .9);
				}
			}
		}
		&[class*="bg-charcoal"] {
			svg {
				fill: $charcoal;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($charcoal, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($charcoal, .1);
				}
			}
			&[class*="-20p"] {
				fill {
					fill: rgba($charcoal, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($charcoal, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($charcoal, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($charcoal, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($charcoal, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($charcoal, .9);
				}
			}
		}
		&[class*="bg-slate"] {
			svg {
				fill: $slate;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($slate, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($slate, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($slate, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($slate, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($slate, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($slate, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($slate, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($slate, .9);
				}
			}
		}
		&[class*="bg-taupe"] {
			svg {
				fill: $taupe;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($taupe, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($taupe, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($taupe, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($taupe, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					svg: rgba($taupe, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($taupe, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($taupe, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($taupe, .9);
				}
			}
		}
		&[class*="bg-smoke"] {
			svg {
				fill: $smoke;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($smoke, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($smoke, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($smoke, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($smoke, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($smoke, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($smoke, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($smoke, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($smoke, .9);
				}
			}
		}
		&[class*="bg-campus"] {
			svg {
				fill: $campus;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($campus, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($campus, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($campus, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($campus, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($campus, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($campus, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($campus, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($campus, .9);
				}
			}
		}
		&[class*="bg-cerise"] {
			svg {
				fill: $cerise;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($cerise, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($cerise, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($cerise, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($cerise, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($cerise, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($cerise, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($cerise, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($cerise, .9);
				}
			}
		}
		&[class*="bg-orange"] {
			svg {
				fill: $orange;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($orange, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($orange, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($orange, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($orange, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($orange, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($orange, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($orange, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($orange, .9);
				}
			}
		}
		&[class*="bg-gold"] {
			svg {
				fill: $gold;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($gold, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($gold, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($gold, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($gold, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($gold, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($gold, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($gold, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($gold, .9);
				}
			}
		}
		&[class*="bg-moola"] {
			svg {
				fill: $moola;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($moola, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($moola, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($moola, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($moola, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($moola, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($moola, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($moola, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($moola, .9);
				}
			}
		}
		&[class*="bg-shamrock"] {
			svg {
				fill: $shamrock;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($shamrock, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($shamrock, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($shamrock, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($shamrock, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($shamrock, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($shamrock, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($shamrock, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($shamrock, .9);
				}
			}
		}
		&[class*="bg-azure"] {
			svg {
				fill: $azure;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($azure, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($azure, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($azure, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($azure, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($azure, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($azure, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($azure, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($azure, .9);
				}
			}
		}
		&[class*="bg-lake"] {
			svg {
				fill: $lake;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($lake, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($lake, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($lake, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($lake, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($lake, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($lake, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($lake, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($lake, .9);
				}
			}
		}
		&[class*="bg-eggplant"] {
			svg {
				fill: $eggplant;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($eggplant, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($eggplant, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($eggplant, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($eggplant, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($eggplant, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($eggplant, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($eggplant, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($eggplant, .9);
				}
			}
		}
	}
}

/* ---------- WAVE ANIMATIONS */
.waves-effect {
	position: relative;
	cursor: pointer;
	display: inline-block;
	overflow: hidden;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	-webkit-tap-highlight-color: transparent;
	vertical-align: middle;
	z-index: 1;
	will-change: opacity, transform;
	@include transition(.3s ease-out);
	.waves-ripple {
		position: absolute;
		border-radius: 50%;
		width: 20px;
		height: 20px;
		margin-top: -10px;
		margin-left: -10px;
		opacity: 0;
		background: rgba($charcoal,0.2);
		@include transition(0.7s ease-out);
		-webkit-transition-property: -webkit-transform, opacity;
		-moz-transition-property: -moz-transform, opacity;
		-o-transition-property: -o-transform, opacity;
		transition-property: transform, opacity;
		@include transform(scale(0));
		pointer-events: none;
	}

	// Waves Colors
	&.waves-light .waves-ripple {
		background: rgba(white,.45);
	}
	&.waves-dark .waves-ripple {
		background: rgba($charcoal,.70);
	}
	&.waves-slate .waves-ripple {
		background: rgba($slate,.70);
	}
	&.waves-taupe .waves-ripple {
		background: rgba($taupe,.70);
	}
	&.waves-campus .waves-ripple {
		background: rgba($campus,.70);
	}
}
.waves-notransition {
	@include transition-none;
}
.waves-circle {
	@include transform(translateZ(0));
	-webkit-mask-image: -webkit-radial-gradient(circle, white 100%, black 100%);
}
.waves-input-wrapper {
	border-radius: .2em;
	vertical-align: bottom;
	.waves-button-input {
		position: relative;
		top: 0;
		left: 0;
		z-index: 1;
	}
}
.waves-circle {
	text-align: center;
	width: 2.5em;
	height: 2.5em;
	line-height: 2.5em;
	border-radius: 50%;
	-webkit-mask-image: none;
}
.waves-block {
	display: block;
}
/* Firefox Bug: link not triggered */
a.waves-effect .waves-ripple {
	z-index: -1;
}

input {
	color: $charcoal;
}

/* Remove Focus Boxes */
select:focus {
	outline: 1px solid lighten($shamrock, 47%);
}
button:focus {
	outline: none;
	background: lighten($shamrock, 4%);
}
label {
	font-size: 12px;
	color: $taupe;
}

/***************************
   Text Inputs + Textarea
****************************/
// Style Placeholders
.input-field {
	 ::-webkit-input-placeholder {
		color: lighten($taupe, 20%);
	}
	 :-moz-placeholder {
		/* Firefox 18- */
		color: lighten($taupe, 20%);
	}
	 ::-moz-placeholder {
		/* Firefox 19+ */
		color: lighten($taupe, 20%);
	}
	 :-ms-input-placeholder {
		color: lighten($taupe, 20%);
	}
}

// Text inputs
.input-field {
	input[type=text],
	input[type=password],
	input[type=email],
	input[type=url],
	input[type=time],
	input[type=date],
	input[type=datetime-local],
	input[type=tel],
	input[type=number],
	input[type=search],
	textarea.materialize-textarea {
		// General Styles
		background: transparent;
		border: none;
		border-bottom: 1px solid $taupe;
		border-radius: 0;
		outline: none;
		height: 48px;
		width: 100%;
		font-size: 16px;
		margin: 0 0 15px;
		padding: 0;
		box-shadow: none;
		@include box-sizing;
		@include transition(.3s);
		// Disabled input style
		&:disabled,
		&[readonly="readonly"] {
			color: rgba($taupe,.3);
			border-bottom: 1px dotted rgba($taupe,.3);
		}
		// Disabled label style
		&:disabled+label,
		&[readonly="readonly"]+label {
			color: rgba($taupe,.3);
		}
		// Focused input style
		&:focus:not([readonly]) {
			border-bottom: 1px solid $shamrock;
			box-shadow: 0 1px 0 0 $shamrock;
		}
		// Focused label style
		&:focus:not([readonly])+label {
			color: $shamrock;
		}
		// Valid Input Style
		&.valid,
		&:focus.valid {
			border-bottom: 1px solid $moola;
			box-shadow: 0 1px 0 0 $moola;
		}
		// Custom Success Message
		&.valid + label:after,
		&:focus.valid + label:after {
			content: attr(data-success);
			color: $moola;
			opacity: 1;
		}
		// Invalid Input Style
		&.invalid,
		&:focus.invalid {
			border-bottom: 1px solid $gold;
			box-shadow: 0 1px 0 0 $gold;
		}
		// Custom Error message
		&.invalid + label:after,
		&:focus.invalid + label:after {
			content: attr(data-error);
			color: $gold;
			opacity: 1;
		}
		// Form Message Shared Styles
		& + label:after {
			display: block;
			content: "";
			position: absolute;
			top: 65px;
			opacity: 0;
			transition: .2s opacity ease-out, .2s color ease-out;
		}
	}
}
// Styling for input field wrapper
.input-field {
	position: relative;
	margin-top: 15px;
	label {
		color: $taupe;
		position: absolute;
		top: 15px;
		left: 0;
		font-size: 16px;
		cursor: text;
		@include transition(.2s ease-out);
	}
	label.active {
		font-size: 12px;
		@include transform(translateY(-140%));
	}
	// Prefix Icons
	.prefix {
		position: absolute;
		width: 48px;
		font-size: 2rem;
		@include transition(color .2s);
		&.active {
			color: $shamrock;
		}
	}
	.prefix ~ input,
	.prefix ~ textarea {
		margin-left: 48px;
		width: 92%;
		width: calc(100% - 48px);
	}
	.prefix ~ textarea {
		padding-top: 12px;
	}
	.prefix ~ label {
		margin-left: 48px;
	}
}
// Search Field
.input-field input[type=search] {
	display: block;
	line-height: inherit;
	padding-left: 4rem;
	width: calc(100% - 4rem);
	&:focus {
		background: white;
		border: 0;
		box-shadow: none;
		color: $slate;
		& + label i,
		& ~ .mdi-navigation-close,
		& ~ .material-icons {
			color: $slate;
		}
	}
	& + label {
		left: 1rem;
	}
	& ~ .mdi-navigation-close,
	& ~ .material-icons {
		position: absolute;
		top: 0;
		right: 1rem;
		color: transparent;
		cursor: pointer;
		font-size: 2rem;
		transition: .3s color;
	}
}
// Default textarea
.input-field {
	textarea {
		width: 100%;
		height: 72px;
		background: transparent;
		&.materialize-textarea {
			overflow-y: hidden;
			/* prevents scroll bar flash */
			padding: 15px 0;
			/* prevents text jump on Enter keypress */
			resize: none;
			min-height: 72px;
		}
	}
}
// For textarea autoresize
.input-field {
	.hiddendiv {
		font-size: 16px;
		display: none;
		white-space: pre-wrap;
		word-wrap: break-word;
		overflow-wrap: break-word;
		/* future version of deprecated 'word-wrap' */
		padding-top: 15px;
		/* prevents text jump on Enter keypress */
	}
}

/***************
  Radio Buttons
***************/
/* Remove default Radio Buttons */
.input-field {
	[type="radio"]:not(:checked),
	[type="radio"]:checked {
		position: absolute;
		left: -9999px;
		visibility: hidden;
	}
	[type="radio"]:not(:checked) + label,
	[type="radio"]:checked + label {
		position: relative;
		padding-left: 35px;
		cursor: pointer;
		display: inline-block;
		height: 25px;
		line-height: 25px;
		font-size: 1rem;
		@include transition(.28s ease);
		-webkit-user-select: none;
		/* webkit (safari, chrome) browsers */
		-moz-user-select: none;
		/* mozilla browsers */
		-khtml-user-select: none;
		/* webkit (konqueror) browsers */
		-ms-user-select: none;
		/* IE10+ */
	}
	[type="radio"] + label:before,
	[type="radio"] + label:after {
		content: '';
		position: absolute;
		left: 0;
		top: 0;
		margin: 4px;
		width: 16px;
		height: 16px;
		z-index: 0;
		@include transition(.28s ease);
	}
}

/* Unchecked styles */
.input-field {
	[type="radio"]:not(:checked) + label:before {
		border-radius: 50%;
		border: 2px solid $taupe;
	}
	[type="radio"]:not(:checked) + label:after {
		border-radius: 50%;
		border: 2px solid $taupe;
		z-index: -1;
		@include transform(scale(0));
	}
}

/* Checked styles */
.input-field {
	[type="radio"]:checked + label:before {
		border-radius: 50%;
		border: 2px solid transparent;
	}
	[type="radio"]:checked + label:after {
		border-radius: 50%;
		border: 2px solid $shamrock;
		background: $shamrock;
		z-index: 0;
		@include transform(scale(1.02));
	}
}

/* Radio With gap */
.input-field {
	[type="radio"].with-gap:checked + label:before {
		border-radius: 50%;
		border: 2px solid $shamrock;
	}
	[type="radio"].with-gap:checked + label:after {
		border-radius: 50%;
		border: 2px solid $shamrock;
		background: $shamrock;
		z-index: 0;
		@include transform(scale(.5));
	}
}

/* Disabled Radio With gap */
.input-field {
	[type="radio"].with-gap:disabled:checked + label:before {
		border: 2px solid $smoke;
	}
	[type="radio"].with-gap:disabled:checked + label:after {
		border: none;
		background: $smoke;
	}
}

/* Disabled style */
.input-field {
	[type="radio"]:disabled:not(:checked) + label:before,
	[type="radio"]:disabled:checked + label:before {
		background: transparent;
		border-color: $smoke;
	}
	[type="radio"]:disabled + label {
		color: $smoke;
	}
	[type="radio"]:disabled:not(:checked) + label:before {
		border-color: $smoke;
	}
	[type="radio"]:disabled:checked + label:after {
		background: $smoke;
		border-color: $taupe;
	}
}

/***************
   Checkboxes
***************/
/* CUSTOM CSS CHECKBOXES */
form p {
	margin-bottom: 10px;
	text-align: left;
}
form p:last-child {
	margin-bottom: 0;
}

/* Remove default checkbox */
.input-field {
	[type="checkbox"]:not(:checked),
	[type="checkbox"]:checked {
		position: absolute;
		left: -9999px;
		visibility: hidden;
	}
}

// Checkbox Styles
.input-field {
	[type="checkbox"] {
		// Text Label Style
		+ label {
			position: relative;
			padding-left: 35px;
			cursor: pointer;
			display: inline-block;
			height: 25px;
			line-height: 25px;
			font-size: 1rem;
			-webkit-user-select: none;
			/* webkit (safari, chrome) browsers */
			-moz-user-select: none;
			/* mozilla browsers */
			-khtml-user-select: none;
			/* webkit (konqueror) browsers */
			-ms-user-select: none;
			/* IE10+ */
		}

		/* checkbox aspect */
		+ label:before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 18px;
			height: 18px;
			z-index: 0;
			border: 2px solid $taupe;
			border-radius: 1px;
			margin-top: 2px;
			@include transition(.2s);
		}
		&:not(:checked):disabled + label:before {
			border: none;
			background: $smoke;
		}
	}
	[type="checkbox"]:checked {
		+ label:before {
			top: -4px;
			left: -3px;
			width: 12px;
			height: 22px;
			border-top: 2px solid transparent;
			border-left: 2px solid transparent;
			border-right: 2px solid $shamrock;
			border-bottom: 2px solid $shamrock;
			@include transform(rotate(40deg));
			-webkit-backface-visibility: hidden;
			@include transform-origin(100% 100%);
		}
		&:disabled + label:before {
			border-right: 2px solid $smoke;
			border-bottom: 2px solid $smoke;
		}
	}
}

/* Indeterminate checkbox */
.input-field {
	[type="checkbox"]:indeterminate {
		+label:before {
			left: -10px;
			top: -11px;
			width: 10px;
			height: 22px;
			border-top: none;
			border-left: none;
			border-right: 2px solid $shamrock;
			border-bottom: none;
			@include transform(rotate(90deg));
			-webkit-backface-visibility: hidden;
			@include transform-origin(100% 100%);
		}
		// Disabled indeterminate
		&:disabled + label:before {
			border-right: 2px solid $smoke;
			background: transparent;
		}
	}
}

// Filled in Style
.input-field {
	[type="checkbox"].filled-in {
		// General
		+ label:after {
			border-radius: 2px;
		}
		+ label:before,
		+ label:after {
			content: '';
			left: 0;
			position: absolute;
			/* .1s delay is for check animation */
			transition: border .25s, background-color .25s, width .20s .1s, height .20s .1s, top .20s .1s, left .20s .1s;
			z-index: 1;
		}
		// Unchecked style
		&:not(:checked) + label:before {
			width: 0;
			height: 0;
			border: 3px solid transparent;
			left: 6px;
			top: 10px;
			-webkit-transform: rotateZ(37deg);
			transform: rotateZ(37deg);
			-webkit-transform-origin: 20% 40%;
			transform-origin: 100% 100%;
		}
		&:not(:checked) + label:after {
			height: 20px;
			width: 20px;
			background: transparent;
			border: 2px solid $taupe;
			top: 0;
			z-index: 0;
		}
		// Checked style
		&:checked {
			+ label:before {
				top: 0;
				left: 1px;
				width: 8px;
				height: 13px;
				border-top: 2px solid transparent;
				border-left: 2px solid transparent;
				border-right: 2px solid white;
				border-bottom: 2px solid white;
				-webkit-transform: rotateZ(37deg);
				transform: rotateZ(37deg);
				-webkit-transform-origin: 100% 100%;
				transform-origin: 100% 100%;
			}
			+ label:after {
				top: 0;
				width: 20px;
				height: 20px;
				border: 2px solid $shamrock;
				background: $shamrock;
				z-index: 0;
			}
		}
		// Disabled style
		&:disabled:not(:checked) + label:before {
			background: transparent;
			border: 2px solid transparent;
		}
		&:disabled:not(:checked) + label:after {
			border-color: transparent;
			background: $taupe;
		}
		&:disabled:checked + label:before {
			background: transparent;
		}
		&:disabled:checked + label:after {
			background: $taupe;
			border-color: $taupe;
		}
	}
}

// /***************
//      Switch
// ***************/
// .switch,
// .switch * {
// 	-webkit-user-select: none;
// 	-moz-user-select: none;
// 	-khtml-user-select: none;
// 	-ms-user-select: none;
// }
// .switch label {
// 	cursor: pointer;
// }
// .switch label input[type=checkbox] {
// 	opacity: 0;
// 	width: 0;
// 	height: 0;
// }
// .switch label input[type=checkbox]:checked + .lever {
// 	background: desaturate(lighten($shamrock, 25%), 25%);
// }
// .switch label input[type=checkbox]:checked + .lever:after {
// 	background: $shamrock;
// }
// .switch label .lever {
// 	content: "";
// 	display: inline-block;
// 	position: relative;
// 	width: 40px;
// 	height: 15px;
// 	background: $taupe;
// 	border-radius: 15px;
// 	margin-right: 10px;
// 	transition: background .3s ease;
// 	vertical-align: middle;
// 	margin: 0 16px;
// }
// .switch label .lever:after {
// 	content: "";
// 	position: absolute;
// 	display: inline-block;
// 	width: 21px;
// 	height: 21px;
// 	background: $smoke;
// 	border-radius: 21px;
// 	box-shadow: 0 1px 3px 1px rgba($charcoal,.4);
// 	left: -5px;
// 	top: -3px;
// 	transition: left .3s ease, background .3s ease, box-shadow .1s ease;
// }
//
// // Switch active style
// input[type=checkbox]:checked:not(:disabled) ~ .lever:active:after {
// 	box-shadow: 0 1px 3px 1px rgba($charcoal,.4), 0 0 0 15px transparentize($shamrock,.9);
// }
// input[type=checkbox]:not(:disabled) ~ .lever:active:after {
// 	box-shadow: 0 1px 3px 1px rgba($charcoal,.4), 0 0 0 15px rgba($charcoal,.08);
// }
// .switch label input[type=checkbox]:checked + .lever:after {
// 	left: 24px;
// }
//
// // Disabled Styles
// .switch input[type=checkbox][disabled] + .lever {
// 	cursor: default;
// }
// .switch label input[type=checkbox][disabled] + .lever:after,
// .switch label input[type=checkbox][disabled]:checked + .lever:after {
// 	background: $taupe;
// }
//
// /***************
//   Select Field
// ***************/
// .select-label {
// 	position: absolute;
// }
// .select-wrapper {
// 	position: relative;
// 	input.select-dropdown {
// 		position: relative;
// 		cursor: pointer;
//
// 		// color: $slate;
// 		background: transparent;
// 		border: none;
// 		border-bottom: 1px solid $taupe;
// 		outline: none;
// 		height: 3rem;
// 		line-height: 3rem;
// 		width: 100%;
// 		font-size: 1rem;
// 		margin: 0 0 15px;
// 		padding: 0;
// 		display: block;
// 	}
// 	span.caret {
// 		color: initial;
// 		position: absolute;
// 		right: 0;
// 		top: 16px;
// 		font-size: 10px;
// 		&.disabled {
// 			color: $smoke;
// 		}
// 	}
// 	& + label {
// 		position: absolute;
// 		top: -14px;
// 		font-size: 12px;
// 	}
// }
// select {
// 	display: none;
// }
// select.browser-default {
// 	display: block;
// }
//
// // Disabled styles
// select:disabled {
// 	color: rgba($charcoal,.3);
// }
// .select-wrapper input.select-dropdown:disabled {
// 	color: rgba($charcoal,.3);
// 	cursor: default;
// 	-webkit-user-select: none;
// 	/* webkit (safari, chrome) browsers */
// 	-moz-user-select: none;
// 	/* mozilla browsers */
// 	-ms-user-select: none;
// 	/* IE10+ */
// 	border-bottom: 1px solid rgba($charcoal,.3);
// }
// .select-wrapper i {
// 	color: rgba($charcoal,.3);
// }
// .select-dropdown li.disabled {
// 	color: rgba($charcoal,.3);
// 	background: transparent;
// }
//
// /*********************
//       File Input
// **********************/
// .file-field {
// 	position: relative;
// 	.file-path-wrapper {
// 		overflow: hidden;
// 		padding-left: 10px;
// 	}
// 	input.file-path {
// 		width: 100%;
// 	}
// 	.btn {
// 		float: left;
// 		height: 3rem;
// 		line-height: 3rem;
// 	}
// 	span {
// 		cursor: pointer;
// 	}
// 	input[type=file] {
// 		position: absolute;
// 		top: 0;
// 		right: 0;
// 		left: 0;
// 		bottom: 0;
// 		width: 100%;
// 		margin: 0;
// 		padding: 0;
// 		font-size: 20px;
// 		cursor: pointer;
// 		opacity: 0;
// 		filter:alpha(opacity=0);
// 	}
// }
//
// /***************
//       Range
// ***************/
// .range-field {
// 	position: relative;
// }
// input[type=range],
// input[type=range] + .thumb {
// 	@extend .no-select;
// 	cursor: pointer;
// }
// input[type=range] {
// 	position: relative;
// 	background: transparent;
// 	border: none;
// 	outline: none;
// 	width: 100%;
// 	margin: 15px 0;
// 	padding: 0;
// }
// input[type=range] + .thumb {
// 	position: absolute;
// 	border: none;
// 	height: 0;
// 	width: 0;
// 	border-radius: 50%;
// 	background: $shamrock;
// 	top: 10px;
// 	margin-left: -6px;
// 	@include transform-origin(50% 50%);
// 	@include transform(rotate(-45deg));
// 	.value {
// 		display: block;
// 		width: 30px;
// 		text-align: center;
// 		color: $shamrock;
// 		font-size: 0;
// 		@include transform(rotate(45deg));
// 	}
// 	&.active {
// 		border-radius: 50% 50% 50% 0;
// 		.value {
// 			color: white;
// 			margin-left: -1px;
// 			margin-top: 8px;
// 			font-size: 10px;
// 		}
// 	}
// }
// input[type=range]:focus {
// 	outline: none;
// }
//
// // WebKit
// input[type=range] {
// 	-webkit-appearance: none;
// }
// input[type=range]::-webkit-slider-runnable-track {
// 	height: 3px;
// 	background: #c2c0c2;
// 	border: none;
// }
// input[type=range]::-webkit-slider-thumb {
// 	-webkit-appearance: none;
// 	border: none;
// 	height: 14px;
// 	width: 14px;
// 	border-radius: 50%;
// 	background: $shamrock;
// 	transform-origin: 50% 50%;
// 	margin: -5px 0 0;
// 	@include transition(.3s);
// }
// input[type=range]:focus::-webkit-slider-runnable-track {
// 	background: #ccc;
// }
//
// // FireFox
// input[type=range] {
// 	/* fix for FF unable to apply focus style bug  */
// 	border: 1px solid white;
//
// 	/*required for proper track sizing in FF*/
// }
// input[type=range]::-moz-range-track {
// 	height: 3px;
// 	background: #ddd;
// 	border: none;
// }
// input[type=range]::-moz-range-thumb {
// 	border: none;
// 	height: 14px;
// 	width: 14px;
// 	border-radius: 50%;
// 	background: $shamrock;
// 	margin-top: -5px;
// }
//
// /*hide the outline behind the border*/
// input[type=range]:-moz-focusring {
// 	outline: 1px solid white;
// 	outline-offset: -1px;
// }
// input[type=range]:focus::-moz-range-track {
// 	background: #ccc;
// }
//
// // IE 10+
// input[type=range]::-ms-track {
// 	height: 3px;
//
// 	/*remove bg colour from the track, we'll use ms-fill-lower and ms-fill-upper instead */
// 	background: transparent;
//
// 	/*leave room for the larger thumb to overflow with a transparent border */
// 	border-color: transparent;
// 	border-width: 6px 0;
//
// 	/*remove default tick marks*/
// 	color: transparent;
// }
// input[type=range]::-ms-fill-lower {
// 	background: #777;
// }
// input[type=range]::-ms-fill-upper {
// 	background: #ddd;
// }
// input[type=range]::-ms-thumb {
// 	border: none;
// 	height: 14px;
// 	width: 14px;
// 	border-radius: 50%;
// 	background: $shamrock;
// }
// input[type=range]:focus::-ms-fill-lower {
// 	background: #888;
// }
// input[type=range]:focus::-ms-fill-upper {
// 	background: #ccc;
// }
//
// /***************************
//    Text Inputs + Textarea
// ****************************/
// select {
// 	background: rgba(255, 255, 255, 0.90);
// 	width: 100%;
// 	padding: 5px;
// 	border: 1px solid #f2f2f2;
// 	border-radius: 2px;
// 	height: 3rem;
// }