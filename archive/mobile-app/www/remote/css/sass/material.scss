@import 'mixin';

/* ---------- CHIPS */
.chip {
	display: inline-block;
	position: relative;
	height: 32px;
	font-size: 13px;
	font-weight: 600;
	color: white;
	line-height: 32px;
	padding: 0 12px;
	border-radius: 16px;
	img {
		float: left;
		margin: 0 8px 0 -12px;
		padding: 2px;
		height: 32px;
		width: 32px;
		border-radius: 50%;
	}
	i.material-icons {
		cursor: pointer;
		float: right;
		font-size: 16px;
		line-height: 32px;
		padding-left: 8px;
	}
	&.bg-smoke {
		color: rgba($charcoal,.7);
	}
	&[class*="arrow"] {
		border-radius: 2px;
		svg {
			position: absolute;
			width: 20px;
			height: 10px;
		}
		&.arrow-up {
			margin-top: 20px;
			svg {
				@include center-x;
				top: -10px;
			}
		}
		&.arrow-down {
			margin-bottom: 20px;
			svg {
				@include center-x;
				@include transform(translateX(-50%) rotate(180deg));
				@include transform-origin(center center);
				bottom: -10px;
			}
		}
		&.arrow-left {
			margin-left: 20px;
			svg {
				@include center-y;
				@include transform(translateY(-50%) rotate(-90deg));
				@include transform-origin(center center);
				left: -15px;
			}
		}
		&.arrow-right {
			margin-right: 20px;
			svg {
				@include center-y;
				@include transform(translateY(-50%) rotate(90deg));
				@include transform-origin(center center);
				right: -15px;
			}
		}
		&[class*="bg-white"] {
			svg {
				fill: white;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba(white, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba(white, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba(white, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba(white, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba(white, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba(white, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba(white, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba(white, .9);
				}
			}
		}
		&[class*="bg-charcoal"] {
			svg {
				fill: $charcoal;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($charcoal, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($charcoal, .1);
				}
			}
			&[class*="-20p"] {
				fill {
					fill: rgba($charcoal, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($charcoal, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($charcoal, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($charcoal, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($charcoal, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($charcoal, .9);
				}
			}
		}
		&[class*="bg-slate"] {
			svg {
				fill: $slate;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($slate, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($slate, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($slate, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($slate, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($slate, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($slate, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($slate, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($slate, .9);
				}
			}
		}
		&[class*="bg-taupe"] {
			svg {
				fill: $taupe;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($taupe, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($taupe, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($taupe, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($taupe, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					svg: rgba($taupe, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($taupe, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($taupe, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($taupe, .9);
				}
			}
		}
		&[class*="bg-smoke"] {
			svg {
				fill: $smoke;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($smoke, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($smoke, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($smoke, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($smoke, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($smoke, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($smoke, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($smoke, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($smoke, .9);
				}
			}
		}
		&[class*="bg-campus"] {
			svg {
				fill: $campus;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($campus, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($campus, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($campus, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($campus, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($campus, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($campus, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($campus, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($campus, .9);
				}
			}
		}
		&[class*="bg-cerise"] {
			svg {
				fill: $cerise;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($cerise, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($cerise, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($cerise, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($cerise, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($cerise, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($cerise, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($cerise, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($cerise, .9);
				}
			}
		}
		&[class*="bg-orange"] {
			svg {
				fill: $orange;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($orange, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($orange, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($orange, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($orange, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($orange, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($orange, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($orange, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($orange, .9);
				}
			}
		}
		&[class*="bg-gold"] {
			svg {
				fill: $gold;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($gold, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($gold, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($gold, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($gold, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($gold, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($gold, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($gold, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($gold, .9);
				}
			}
		}
		&[class*="bg-moola"] {
			svg {
				fill: $moola;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($moola, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($moola, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($moola, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($moola, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($moola, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($moola, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($moola, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($moola, .9);
				}
			}
		}
		&[class*="bg-shamrock"] {
			svg {
				fill: $shamrock;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($shamrock, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($shamrock, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($shamrock, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($shamrock, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($shamrock, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($shamrock, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($shamrock, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($shamrock, .9);
				}
			}
		}
		&[class*="bg-azure"] {
			svg {
				fill: $azure;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($azure, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($azure, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($azure, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($azure, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($azure, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($azure, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($azure, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($azure, .9);
				}
			}
		}
		&[class*="bg-lake"] {
			svg {
				fill: $lake;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($lake, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($lake, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($lake, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($lake, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($lake, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($lake, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($lake, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($lake, .9);
				}
			}
		}
		&[class*="bg-eggplant"] {
			svg {
				fill: $eggplant;
			}
			&[class*="-05p"] {
				svg {
					fill: rgba($eggplant, .05);
				}
			}
			&[class*="-10p"] {
				svg {
					fill: rgba($eggplant, .1);
				}
			}
			&[class*="-20p"] {
				svg {
					fill: rgba($eggplant, .2);
				}
			}
			&[class*="-25p"] {
				svg {
					fill: rgba($eggplant, .25);
				}
			}
			&[class*="-50p"] {
				svg {
					fill: rgba($eggplant, .5);
				}
			}
			&[class*="-75p"] {
				svg {
					fill: rgba($eggplant, .75);
				}
			}
			&[class*="-80p"] {
				svg {
					fill: rgba($eggplant, .8);
				}
			}
			&[class*="-90p"] {
				svg {
					fill: rgba($eggplant, .9);
				}
			}
		}
	}
}

input {
	color: $charcoal;
}

/* Remove Focus Boxes */
select:focus {
	outline: 1px solid lighten($shamrock, 47%);
}
button:focus {
	outline: none;
	background: lighten($shamrock, 4%);
}
label {
	font-size: 12px;
	color: $taupe;
}

/***************************
   Text Inputs + Textarea
****************************/
// Style Placeholders
.input-field {
	 ::-webkit-input-placeholder {
		color: lighten($taupe, 20%);
	}
	 :-moz-placeholder {
		/* Firefox 18- */
		color: lighten($taupe, 20%);
	}
	 ::-moz-placeholder {
		/* Firefox 19+ */
		color: lighten($taupe, 20%);
	}
	 :-ms-input-placeholder {
		color: lighten($taupe, 20%);
	}
}

// Text inputs
.input-field {
	input[type=text],
	input[type=password],
	input[type=email],
	input[type=url],
	input[type=time],
	input[type=date],
	input[type=datetime-local],
	input[type=tel],
	input[type=number],
	input[type=search],
	textarea.materialize-textarea {
		// General Styles
		background: transparent;
		border: none;
		border-bottom: 1px solid $taupe;
		border-radius: 0;
		outline: none;
		height: 48px;
		width: 100%;
		font-size: 16px;
		margin: 0 0 15px;
		padding: 0;
		box-shadow: none;
		@include box-sizing;
		@include transition(.3s);
		// Disabled input style
		&:disabled,
		&[readonly="readonly"] {
			color: rgba($taupe,.3);
			border-bottom: 1px dotted rgba($taupe,.3);
		}
		// Disabled label style
		&:disabled+label,
		&[readonly="readonly"]+label {
			color: rgba($taupe,.3);
		}
		// Focused input style
		&:focus:not([readonly]) {
			border-bottom: 1px solid $shamrock;
			box-shadow: 0 1px 0 0 $shamrock;
		}
		// Focused label style
		&:focus:not([readonly])+label {
			color: $shamrock;
		}
		// Valid Input Style
		&.valid,
		&:focus.valid {
			border-bottom: 1px solid $moola;
			box-shadow: 0 1px 0 0 $moola;
		}
		// Custom Success Message
		&.valid + label:after,
		&:focus.valid + label:after {
			content: attr(data-success);
			color: $moola;
			opacity: 1;
		}
		// Invalid Input Style
		&.invalid,
		&:focus.invalid {
			border-bottom: 1px solid $gold;
			box-shadow: 0 1px 0 0 $gold;
		}
		// Custom Error message
		&.invalid + label:after,
		&:focus.invalid + label:after {
			content: attr(data-error);
			color: $gold;
			opacity: 1;
		}
		// Form Message Shared Styles
		& + label:after {
			display: block;
			content: "";
			position: absolute;
			top: 65px;
			opacity: 0;
			transition: .2s opacity ease-out, .2s color ease-out;
		}
	}
}
// Styling for input field wrapper
.input-field {
	position: relative;
	margin-top: 15px;
	label {
		color: $taupe;
		position: absolute;
		top: 15px;
		left: 0;
		font-size: 16px;
		cursor: text;
		@include transition(.2s ease-out);
	}
	label.active {
		font-size: 12px;
		@include transform(translateY(-140%));
	}
	// Prefix Icons
	.prefix {
		position: absolute;
		width: 48px;
		font-size: 2rem;
		@include transition(color .2s);
		&.active {
			color: $shamrock;
		}
	}
	.prefix ~ input,
	.prefix ~ textarea {
		margin-left: 48px;
		width: 92%;
		width: calc(100% - 48px);
	}
	.prefix ~ textarea {
		padding-top: 12px;
	}
	.prefix ~ label {
		margin-left: 48px;
	}
}
// Search Field
.input-field input[type=search] {
	display: block;
	line-height: inherit;
	padding-left: 4rem;
	width: calc(100% - 4rem);
	&:focus {
		background: white;
		border: 0;
		box-shadow: none;
		color: $slate;
		& + label i,
		& ~ .mdi-navigation-close,
		& ~ .material-icons {
			color: $slate;
		}
	}
	& + label {
		left: 1rem;
	}
	& ~ .mdi-navigation-close,
	& ~ .material-icons {
		position: absolute;
		top: 0;
		right: 1rem;
		color: transparent;
		cursor: pointer;
		font-size: 2rem;
		transition: .3s color;
	}
}
// Default textarea
.input-field {
	textarea {
		width: 100%;
		height: 72px;
		background: transparent;
		&.materialize-textarea {
			overflow-y: hidden;
			/* prevents scroll bar flash */
			padding: 15px 0;
			/* prevents text jump on Enter keypress */
			resize: none;
			min-height: 72px;
		}
	}
}
// For textarea autoresize
.input-field {
	.hiddendiv {
		font-size: 16px;
		display: none;
		white-space: pre-wrap;
		word-wrap: break-word;
		overflow-wrap: break-word;
		/* future version of deprecated 'word-wrap' */
		padding-top: 15px;
		/* prevents text jump on Enter keypress */
	}
}