/*!
 * classie - class helper functions
 * from bonzo https://github.com/ded/bonzo
 *
 * classie.has( elem, 'my-class' ) -> true/false
 * classie.add( elem, 'my-new-class' )
 * classie.remove( elem, 'my-unwanted-class' )
 * classie.toggle( elem, 'my-class' )
 */

/*jshint browser: true, strict: true, undef: true */
/*global define: false */

( function( window ) {

'use strict';

// class helper functions from bonzo https://github.com/ded/bonzo

function classReg( className ) {
  return new RegExp("(^|\\s+)" + className + "(\\s+|$)");
}

// classList support for class management
// altho to be fair, the api sucks because it won't accept multiple classes at once
var hasClass, addClass, removeClass;

if ( 'classList' in document.documentElement ) {
  hasClass = function( elem, c ) {
    return elem.classList.contains( c );
  };
  addClass = function( elem, c ) {
    elem.classList.add( c );
  };
  removeClass = function( elem, c ) {
    elem.classList.remove( c );
  };
}
else {
  hasClass = function( elem, c ) {
    return classReg( c ).test( elem.className );
  };
  addClass = function( elem, c ) {
    if ( !hasClass( elem, c ) ) {
      elem.className = elem.className + ' ' + c;
    }
  };
  removeClass = function( elem, c ) {
    elem.className = elem.className.replace( classReg( c ), ' ' );
  };
}

function toggleClass( elem, c ) {
  var fn = hasClass( elem, c ) ? removeClass : addClass;
  fn( elem, c );
}

var classie = {
  // full names
  hasClass: hasClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  // short names
  has: hasClass,
  add: addClass,
  remove: removeClass,
  toggle: toggleClass
};

// transport
if ( typeof define === 'function' && define.amd ) {
  // AMD
  define( classie );
} else {
  // browser global
  window.classie = classie;
}

})( window );


/**
 * svgLoader.js v1.0.0
 * http://www.codrops.com
 *
 * Licensed under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Copyright 2014, Codrops
 * http://www.codrops.com
 */
;( function( window ) {

    'use strict';

    function extend( a, b ) {
        for( var key in b ) {
            if( b.hasOwnProperty( key ) ) {
                a[key] = b[key];
            }
        }
        return a;
    }

    function SVGLoader( el, options ) {
        this.el = el;
        this.options = extend( {}, this.options );
        extend( this.options, options );
        this._init();
    }

    SVGLoader.prototype.options = {
        speedIn : 500,
        easingIn : mina.linear
    }

    SVGLoader.prototype._init = function() {
        var s = Snap( this.el.querySelector( 'svg.transition' ) );
        this.path = s.select( 'path' );
        this.initialPath = this.path.attr('d');

        var openingStepsStr = this.el.getAttribute( 'data-opening' );
        this.openingSteps = openingStepsStr ? openingStepsStr.split(';') : '';
        this.openingStepsTotal = openingStepsStr ? this.openingSteps.length : 0;
        if( this.openingStepsTotal === 0 ) return;

        // if data-closing is not defined then the path will animate to its original shape
        var closingStepsStr = this.el.getAttribute( 'data-closing' ) ? this.el.getAttribute( 'data-closing' ) : this.initialPath;
        this.closingSteps = closingStepsStr ? closingStepsStr.split(';') : '';
        this.closingStepsTotal = closingStepsStr ? this.closingSteps.length : 0;

        this.isAnimating = false;

        if( !this.options.speedOut ) {
            this.options.speedOut = this.options.speedIn;
        }
        if( !this.options.easingOut ) {
            this.options.easingOut = this.options.easingIn;
        }
    }

    SVGLoader.prototype.show = function() {
        if( this.isAnimating ) return false;
        this.isAnimating = true;
        // animate svg
        var self = this,
            onEndAnimation = function() {
                classie.addClass( self.el, 'pageload-loading' );
            };
        this._animateSVG( 'in', onEndAnimation );
        classie.add( this.el, 'show' );
    }

    SVGLoader.prototype.hide = function() {
        var self = this;
        classie.removeClass( this.el, 'pageload-loading' );
        this._animateSVG( 'out', function() {
            // reset path
            self.path.attr( 'd', self.initialPath );
            classie.removeClass( self.el, 'show' );
            self.isAnimating = false;
        } );
    }

    SVGLoader.prototype._animateSVG = function( dir, callback ) {
        var self = this,
            pos = 0,
            steps = dir === 'out' ? this.closingSteps : this.openingSteps,
            stepsTotal = dir === 'out' ? this.closingStepsTotal : this.openingStepsTotal,
            speed = dir === 'out' ? self.options.speedOut : self.options.speedIn,
            easing = dir === 'out' ? self.options.easingOut : self.options.easingIn,
            nextStep = function( pos ) {
                if( pos > stepsTotal - 1 ) {
                    if( callback && typeof callback == 'function' ) {
                        callback();
                    }
                    return;
                }
                self.path.animate( { 'path' : steps[pos] }, speed, easing, function() { nextStep(pos); } );
                pos++;
            };

        nextStep(pos);
    }

    // add to global namespace
    window.SVGLoader = SVGLoader;

})( window );


var bodyLoadingDiv = document.createElement('div');
bodyLoadingDiv.id = 'body-loading-div'
bodyLoadingDiv.className += bodyLoadingDiv.className  + ' show ng-class:{"hide":root.loader.body.hide}'
document.body.appendChild(bodyLoadingDiv);

// @gabrielle-note
var firstTimeLoadingAnimationContent = ''//'<div class="portal-animation"><div class="move-up"><svg class="title" viewBox="0 0 221 61"><path d="M0,27.2326211 C0,37.7852618 3.93472544,44.5934172 13.3438515,44.5934172 C19.1604022,44.5934172 23.0951276,42.0403589 26.516628,37.9554657 L26.858778,37.9554657 L27.672547,42.4084042 C27.7900076,43.0511474 28.4152415,43.5721939 29.0772417,43.5721939 L38.6684659,43.5721939 C39.3267968,43.5721939 39.8604795,43.0418945 39.8604795,42.3897266 L39.8604795,2.20369046 C39.8604795,1.55063188 39.3281638,1.02122329 38.6689602,1.02122329 L26.3395472,1.02122329 C25.6814892,1.02122329 25.1480278,1.55631809 25.1480278,2.19868843 L25.1480278,28.4240483 C23.2662026,31.1473105 21.7265275,32.1685337 18.9893271,32.1685337 C16.0810518,32.1685337 14.7124517,30.8069026 14.7124517,25.3603784 L14.7124517,2.20337668 C14.7124517,1.55049139 14.1801359,1.02122329 13.5209324,1.02122329 L1.19151931,1.02122329 C0.533461365,1.02122329 0,1.5448059 0,2.19839339 L0,27.2326211 L0,27.2326211 L0,27.2326211 Z M59.3630317,48.1676987 C59.3630317,46.9762715 59.876257,46.1252521 60.902707,45.1040288 C62.1002321,45.4444365 63.6399072,45.6146404 67.0614074,45.6146404 L70.3973703,45.6146404 C74.0754834,45.6146404 76.1283835,45.9550482 76.1283835,48.1676987 C76.1283835,50.550553 72.5358083,52.082388 67.7457074,52.082388 C62.7845321,52.082388 59.3630317,50.8909608 59.3630317,48.1676987 L59.3630317,48.1676987 L59.3630317,48.1676987 L59.3630317,48.1676987 Z M65.3506573,61.1031938 C80.5763343,61.1031938 90.1565355,54.80565 90.1565355,45.6146404 C90.1565355,37.7852618 83.9978345,34.5513881 73.3056455,34.5513881 L66.8903324,34.5513881 C62.6134571,34.5513881 60.902707,33.8705725 60.902707,31.9983299 C60.902707,30.8069026 61.073782,30.296291 61.9291571,29.5303735 C63.8109822,29.9558833 65.3506573,30.1260872 66.7192573,30.1260872 C76.2994585,30.1260872 83.9978345,26.041194 83.9978345,15.9991649 C83.9978345,14.2971261 83.6556845,12.5950873 83.3135345,11.573864 L88.2847755,11.573864 C88.9405913,11.573864 89.4722348,11.0505569 89.4722348,10.3940587 L89.4722348,2.20102855 C89.4722348,1.5494401 88.9428818,1.02122329 88.2893993,1.02122329 L73.5622583,1.02122329 C71.5093582,0.340407764 69.1143081,0 66.7192573,0 C57.3101315,0 48.4142305,4.93591258 48.4142305,15.4885533 C48.4142305,20.4244658 51.1514308,24.3391551 54.2307811,26.3816017 L54.2307811,26.7220095 C51.3225058,28.7644561 49.4406806,31.8281259 49.4406806,34.721592 C49.4406806,38.2958735 51.1514308,40.508524 53.3754061,42.0403589 L53.3754061,42.3807666 C49.4406806,44.4232132 47.3877804,47.0613734 47.3877804,50.550553 C47.3877804,58.2097277 55.5993813,61.1031938 65.3506573,61.1031938 L65.3506573,61.1031938 L65.3506573,61.1031938 Z M66.7192573,21.4456891 C63.9820572,21.4456891 62.1002321,19.5734465 62.1002321,15.4885533 C62.1002321,11.573864 63.9820572,9.70162127 66.7192573,9.70162127 C69.4564581,9.70162127 71.3382832,11.573864 71.3382832,15.4885533 C71.3382832,19.5734465 69.4564581,21.4456891 66.7192573,21.4456891 L66.7192573,21.4456891 L66.7192573,21.4456891 L66.7192573,21.4456891 Z M96.1441608,27.2326211 C96.1441608,37.7852618 100.078887,44.5934172 109.488012,44.5934172 C115.304563,44.5934172 119.239288,42.0403589 122.660789,37.9554657 L123.002939,37.9554657 L123.816708,42.4084042 C123.934168,43.0511474 124.559402,43.5721939 125.221403,43.5721939 L134.812627,43.5721939 C135.470958,43.5721939 136.00464,43.0418945 136.00464,42.3897266 L136.00464,2.20369046 C136.00464,1.55063188 135.472324,1.02122329 134.813121,1.02122329 L122.483708,1.02122329 C121.82565,1.02122329 121.292189,1.55631809 121.292189,2.19868843 L121.292189,28.4240483 C119.410363,31.1473105 117.870688,32.1685337 115.133488,32.1685337 C112.225213,32.1685337 110.856613,30.8069026 110.856613,25.3603784 L110.856613,2.20337668 C110.856613,1.55049139 110.324297,1.02122329 109.665093,1.02122329 L97.3356802,1.02122329 C96.6776221,1.02122329 96.1441608,1.5448059 96.1441608,2.19839339 L96.1441608,27.2326211 L96.1441608,27.2326211 L96.1441608,27.2326211 Z M145.926992,42.3897266 C145.926992,43.0427852 146.459307,43.5721939 147.118511,43.5721939 L159.447924,43.5721939 C160.105982,43.5721939 160.639443,43.044885 160.639443,42.3908787 L160.639443,19.9138542 C162.692343,14.6375339 166.455994,12.7652912 169.535344,12.7652912 C171.417169,12.7652912 173.169341,13.2041597 173.169341,13.2041597 C173.807839,13.3377833 174.425308,12.9209469 174.546473,12.2837671 L176.499468,2.01335901 C176.621538,1.37141657 176.208914,0.702783144 175.57532,0.541374491 C175.57532,0.541374491 174.068832,0 171.417169,0 C167.225831,0 162.435731,2.55305823 159.270843,8.33999023 L158.928693,8.33999023 L158.06716,2.19710981 C157.976078,1.54768562 157.37223,1.02122329 156.710229,1.02122329 L147.119005,1.02122329 C146.460674,1.02122329 145.926992,1.55152264 145.926992,2.20369046 L145.926992,42.3897266 L145.926992,42.3897266 L145.926992,42.3897266 Z M181.33952,27.2326211 C181.33952,37.7852618 185.274246,44.5934172 194.683372,44.5934172 C200.499923,44.5934172 204.434648,42.0403589 207.856149,37.9554657 L208.198299,37.9554657 L209.012067,42.4084042 C209.129528,43.0511474 209.754762,43.5721939 210.416762,43.5721939 L220.007986,43.5721939 C220.666318,43.5721939 221.2,43.0418945 221.2,42.3897266 L221.2,2.20369046 C221.2,1.55063188 220.667684,1.02122329 220.008481,1.02122329 L207.679068,1.02122329 C207.02101,1.02122329 206.487549,1.55631809 206.487549,2.19868843 L206.487549,28.4240483 C204.605723,31.1473105 203.066048,32.1685337 200.328848,32.1685337 C197.420572,32.1685337 196.051972,30.8069026 196.051972,25.3603784 L196.051972,2.20337668 C196.051972,1.55049139 195.519656,1.02122329 194.860453,1.02122329 L182.53104,1.02122329 C181.872982,1.02122329 181.33952,1.5448059 181.33952,2.19839339 L181.33952,27.2326211 L181.33952,27.2326211 L181.33952,27.2326211 Z" fill="#69B3A5"></path></svg><svg class="head" viewBox="0 0 150 150"><g fill="none" fill-rule="evenodd"><path d="M36,89 C36,89 32,89 30,93 C28,97 28.9750979,103.312012 32.970215,105.79248 C36.9653322,108.272949 40.0000002,105 40,105 C43.9716799,112.0625 51.4101584,131.488446 84.5060264,129.99722 C110.625974,128.820313 122.641113,110.905274 122,95 C122,95 126.995605,97.3076173 129.519043,93.7084962 C132.04248,90.1093751 133,85.9999999 131,82.0000002 C129,78.0000005 126,77 122,79 C125,66.0000006 107,53 107,53 C95,57 83,49 72,49 C61,49 32,55 36,89" stroke="#33534D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="#F9ECE5"></path><path d="M86,115 C91,116 101,114 101,108" stroke="#33534D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path><path d="M30,71 C19.8095703,72.2685547 11.9628907,58 21.0712891,47.8300781 C21.0712892,53 25.0009767,58 30.9999994,58 C18.9804688,50.9570312 24.8095704,23.3339844 42.3525396,19.9365234 C38.5996099,27.453125 49.4423812,31 53,31 C53,31 54,23 61,21 C55,37 97,22 109,42 C109,42 110,49 107,53 C95,57 83,49 72,49 C61,49 32,55 36,89 C36,89 26,85 30,71 Z M107,53 C107,53 125,66.0000006 122,79 C138,61.9999994 115.78,39 109,42 C109,42 110,49 107,53 Z" stroke="#33534D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="#69B3A5"></path><path d="M78.5746668,76.3474511 C74.5891604,76.700595 73.2136606,78.9335687 73.3857487,79.1764552 C74.4389701,80.6560625 75.2624913,82.3360577 75.7916306,84.1810433 C78.2951471,92.9132364 73.2459966,102.022376 64.5138811,104.526779 C55.7808023,107.030373 46.6716623,101.981222 44.1672601,93.2491065 C42.5744394,87.6932015 37.199641,88.0099196 37.199641,88.0099196 L37.0757398,84.6451964 C37.0757398,84.6451964 39.3423669,84.0488221 41.9589013,82.3204481 C44.7727831,80.4605641 47.9707958,77.4415877 48.5525427,76.878377 C50.4279684,75.0648959 52.7624199,73.6726953 55.4458954,72.9032938 C61.1323387,71.2722764 66.978569,72.8448642 71.0568783,76.5517651 C71.234315,76.7129631 72.5871447,74.2208686 78.3445462,73.7171612 C83.6590708,73.2522005 85.4240955,75.4715182 85.5708448,75.2819576 C88.9434989,70.9231818 94.4278349,68.359298 100.311111,68.978096 C103.087424,69.2698279 105.628163,70.2355046 107.790005,71.6957706 C108.460714,72.1494056 112.134381,74.5671879 115.228479,75.9101906 C118.105392,77.1579503 120.441143,77.3516687 120.441143,77.3516687 L120.903402,80.6867894 C120.903402,80.6867894 115.555262,81.3082069 114.951412,87.0562956 C114.001374,96.0906356 105.907398,102.644864 96.8722494,101.695788 C87.8379094,100.745749 81.2836814,92.6517735 82.2328344,83.617511 C82.4335564,81.7086708 82.9528384,79.9111955 83.7331279,78.2711769 C83.8604248,78.0020975 82.1180701,76.0419007 78.1317897,76.3861978 L78.5746668,76.3474511 Z M61.70313,102.841647 C69.0409571,102.19967 74.4690164,95.7307611 73.8270397,88.392934 C73.185063,81.0551069 66.7161539,75.6270476 59.3783268,76.2690243 C52.0404997,76.911001 46.6124404,83.3799101 47.2544171,90.7177372 C47.8963938,98.0555643 54.3653029,103.483624 61.70313,102.841647 Z M99.3476788,99.5481757 C92.0098516,100.190152 85.5409425,94.7620931 84.8989658,87.424266 C84.2569891,80.0864388 89.6850484,73.6175297 97.0228755,72.975553 C104.360703,72.3335763 110.829612,77.7616356 111.471588,85.0994627 C112.113565,92.4372898 106.685506,98.906199 99.3476788,99.5481757 Z" stroke="#33534D" stroke-linecap="round" stroke-linejoin="round" fill="#33534D"></path><path d="M65.5288326,95.1640534 C67.7258698,94.9331355 69.3197243,92.9648891 69.0888064,90.767852 C68.8578885,88.5708149 66.7417349,86.6882461 64.5880769,86.2133563 C61.4999827,85.5324198 59.5109385,85.7414768 56.6319013,87.0495841 C53.7528641,88.3576913 51.1874123,92.6493644 51.1874123,92.6493644 L53.2593359,93.2288569 C57.7309517,87.9395775 60.9235743,89.6150359 61.1326312,91.6040797 C61.3635491,93.8011168 63.3317955,95.3949713 65.5288326,95.1640534 L65.5288326,95.1640534 Z M103.289054,90.8388129 C105.486092,90.607895 107.079946,88.6396486 106.849028,86.4426115 C106.61811,84.2455744 104.501957,82.3630056 102.348299,81.8881158 C99.2602046,81.2071793 97.2711603,81.4162363 94.3921231,82.7243435 C91.5130859,84.0324508 88.9476341,88.3241239 88.9476341,88.3241239 L91.0195577,88.9036164 C95.4911735,83.614337 98.6837961,85.2897954 98.892853,87.2788392 C99.123771,89.4758763 101.092017,91.0697308 103.289054,90.8388129 L103.289054,90.8388129 Z"  fill="#33534D" ></path> <path d="M45,70 L67,71 L67,68 L47,64 L45,70 L45,70 Z M109.752203,65.6040853 L87.9230753,68.5177063 L87.6616081,65.5291222 L107.236879,59.8012286 L109.752203,65.6040853 L109.752203,65.6040853 Z" stroke="#33534D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" fill="#69B2A4"></path><path d="M35.5,105 C36.3284271,105 37,104.328427 37,103.5 C37,102.671573 36.3284271,102 35.5,102 C34.6715729,102 34,102.671573 34,103.5 C34,104.328427 34.6715729,105 35.5,105 L35.5,105 Z M126.223145,93.7663574 C127.051572,93.7663574 127.723145,93.0947845 127.723145,92.2663574 C127.723145,91.4379303 127.051572,90.7663574 126.223145,90.7663574 C125.394717,90.7663574 124.723145,91.4379303 124.723145,92.2663574 C124.723145,93.0947845 125.394717,93.7663574 126.223145,93.7663574 L126.223145,93.7663574 Z" stroke="#33534D" stroke-linecap="round" stroke-linejoin="round"  fill="#33534D" > </path><path d="M29.8920408,92.4285792 C28.8157813,92.1801051 27.7418726,92.8511578 27.4933985,93.9274172 C27.2449245,95.0036767 27.9159771,96.0775854 28.9922366,96.3260595 C30.068496,96.5745335 31.1424047,95.9034809 31.3908788,94.8272214 M129.716513,89.0236025 C129.449293,90.0953616 130.101502,91.1808182 131.173261,91.4480377 C132.24502,91.7152573 133.330476,91.0630491 133.597696,89.9912901 C133.864915,88.919531 133.212707,87.8340744 132.140948,87.5668548" stroke="#33534D" stroke-linecap="round" stroke-linejoin="round"></path></g></svg></div><div class="portal-progress"><div></div></div><svg class="portal" viewBox="0 0 280 329"><ellipse cx="140" cy="27.5" rx="140" ry="27.5" fill="#40484B"></ellipse></svg><svg class="portal-shadow" viewBox="0 0 280 329"><path d="M0,27 C0,42.463973 62.680135,55 140,55 C217.319865,55 280,42.463973 280,27 C279.974609,26.4140625 244,10.9999998 244,11 C244,28.1208272 197.661472,42 140.5,42 C83.3385284,42 37,28.1208272 37,11 L0,27 Z" fill="#40484B"></path></svg><svg class="mask" viewBox="0 0 280 329"><path d="M280,27.5 C280,42.6878306 217.319865,55 140,55 C62.680135,55 0,42.6878306 0,27.5 C0,12.3121694 0,329 0,329 L280,329 L280,27.5 L280,27.5 Z" fill="#F1F1F1"></path></svg></div>';
firstTimeLoadingAnimationContent += '<div class="pageload-overlay"  data-opening="M -18 -26.90625 L -18 86.90625 L 98 86.90625 L 98 -26.90625 L -18 -26.90625 Z M 40 29.96875 C 40.01804 29.96875 40.03125 29.98196 40.03125 30 C 40.03125 30.01804 40.01804 30.03125 40 30.03125 C 39.98196 30.03125 39.96875 30.01804 39.96875 30 C 39.96875 29.98196 39.98196 29.96875 40 29.96875 Z"><svg xmlns="http://www.w3.org/2000/svg" class="transition" style="position:fixed;background-color:transparent; visibility:hidden;" width="100%" height="100%" viewBox="0 0 80 60" preserveAspectRatio="xMidYMid slice"><path d="M -18 -26.90625 L -18 86.90625 L 98 86.90625 L 98 -26.90625 L -18 -26.90625 Z M 40 -25.6875 C 70.750092 -25.6875 95.6875 -0.7500919 95.6875 30 C 95.6875 60.750092 70.750092 85.6875 40 85.6875 C 9.2499078 85.6875 -15.6875 60.750092 -15.6875 30 C -15.6875 -0.7500919 9.2499078 -25.6875 40 -25.6875 Z"/></svg></div>'


var TIMEOUT_UNTIL_END_OF_LOADER = 1000;



bodyLoadingDiv.innerHTML = firstTimeLoadingAnimationContent;

loader = new SVGLoader( document.querySelector('#body-loading-div .pageload-overlay'), { speedIn : 300, easingIn : mina.easeinout } );

loader.show();
setTimeout(function() {
    bodyLoadingDiv.style.visibility = "hidden";
    document.querySelector('#body-loading-div svg.transition').style.visibility = "visible";
    loader.hide();
}, TIMEOUT_UNTIL_END_OF_LOADER)

