"""empty message

Revision ID: 40c665a925a1
Revises: 1205bb16d2c2
Create Date: 2015-03-12 11:28:22.590101

"""

# revision identifiers, used by Alembic.
revision = '40c665a925a1'
down_revision = '1205bb16d2c2'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('university',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('city_short', sa.String(), nullable=True),
    sa.Column('state_short', sa.String(), nullable=True),
    sa.Column('zip_code', sa.Integer(), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('admin_approved', sa.Boolean(), nullable=True),
    sa.Column('contributed_user_id', sa.Integer(), nullable=True),
    sa.Column('num_popular_courses', sa.Integer(), nullable=True),
    sa.Column('num_courses', sa.Integer(), nullable=True),
    sa.Column('num_students', sa.Integer(), nullable=True),
    sa.Column('num_gurus', sa.Integer(), nullable=True),
    sa.Column('num_majors', sa.Integer(), nullable=True),
    sa.Column('num_emails', sa.Integer(), nullable=True),
    sa.Column('ready_to_launch', sa.Boolean(), nullable=True),
    sa.Column('email_attributes', sa.String(), nullable=True),
    sa.Column('emails_student_only', sa.Boolean(), nullable=True),
    sa.Column('us_news_ranking', sa.Integer(), nullable=True),
    sa.Column('public_school_ranking', sa.Integer(), nullable=True),
    sa.Column('school_color_one', sa.String(), nullable=True),
    sa.Column('school_color_two', sa.String(), nullable=True),
    sa.Column('school_logo_image_url', sa.String(), nullable=True),
    sa.Column('school_casual_name', sa.String(), nullable=True),
    sa.Column('school_mascot_name', sa.String(), nullable=True),
    sa.Column('school_population', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('android', sa.Float(), nullable=True),
    sa.Column('ios', sa.Float(), nullable=True),
    sa.Column('ios_msg', sa.String(), nullable=True),
    sa.Column('android_msg', sa.String(), nullable=True),
    sa.Column('latest_android', sa.String(), nullable=True),
    sa.Column('latest_ios', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('campaign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_scheduled', sa.DateTime(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('important', sa.Boolean(), nullable=True),
    sa.Column('track_opens', sa.Boolean(), nullable=True),
    sa.Column('track_clicks', sa.Boolean(), nullable=True),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('sender_email', sa.String(), nullable=True),
    sa.Column('sender_name', sa.String(), nullable=True),
    sa.Column('mandrill_template_id', sa.String(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('department',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('major', sa.String(), nullable=True),
    sa.Column('affiliations', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('fb_id', sa.String(), nullable=True),
    sa.Column('time_sent', sa.DateTime(), nullable=True),
    sa.Column('time_opened', sa.DateTime(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('admin_account', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('build',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('is_major', sa.Boolean(), nullable=True),
    sa.Column('major_num', sa.Integer(), nullable=True),
    sa.Column('minor_num', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('is_minor', sa.Boolean(), nullable=True),
    sa.Column('android_supported', sa.Boolean(), nullable=True),
    sa.Column('ios_supported', sa.Boolean(), nullable=True),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('version_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['version_id'], ['version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('fb_id', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('auth_token', sa.String(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('student_introduction', sa.String(), nullable=True),
    sa.Column('is_a_guru', sa.Boolean(), nullable=True),
    sa.Column('guru_mode', sa.Boolean(), nullable=True),
    sa.Column('guru_discoverability', sa.Boolean(), nullable=True),
    sa.Column('guru_introduction', sa.String(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('estimated_guru_score', sa.Integer(), nullable=True),
    sa.Column('estimated_guru_rank', sa.Integer(), nullable=True),
    sa.Column('estimated_guru_rank_last_updated', sa.DateTime(), nullable=True),
    sa.Column('official_guru_score', sa.Integer(), nullable=True),
    sa.Column('official_guru_rank', sa.Integer(), nullable=True),
    sa.Column('official_guru_rank_last_updated', sa.DateTime(), nullable=True),
    sa.Column('location_services_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('phone_number_confirmed', sa.Boolean(), nullable=True),
    sa.Column('lower_pay_rate', sa.Float(), nullable=True),
    sa.Column('upper_pay_rate', sa.Float(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('total_earned', sa.Float(), nullable=True),
    sa.Column('total_cashed_out', sa.Float(), nullable=True),
    sa.Column('credits', sa.Float(), nullable=True),
    sa.Column('recent_latitude', sa.Float(), nullable=True),
    sa.Column('recent_longitude', sa.Float(), nullable=True),
    sa.Column('last_gps_activity', sa.DateTime(), nullable=True),
    sa.Column('tos_version', sa.Integer(), nullable=True),
    sa.Column('tos_signed_date', sa.DateTime(), nullable=True),
    sa.Column('guru_score', sa.Float(), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=True),
    sa.Column('referred_by_id', sa.Integer(), nullable=True),
    sa.Column('deactivated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['referred_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('major',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('time_added', sa.DateTime(), nullable=True),
    sa.Column('admin_approved', sa.Boolean(), nullable=True),
    sa.Column('contributed_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contributed_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_time_rated', sa.DateTime(), nullable=True),
    sa.Column('guru_time_rated', sa.DateTime(), nullable=True),
    sa.Column('student_rating', sa.Integer(), nullable=True),
    sa.Column('guru_rating', sa.Integer(), nullable=True),
    sa.Column('student_rating_description', sa.String(), nullable=True),
    sa.Column('guru_rating_description', sa.String(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_added', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('department_short', sa.String(), nullable=True),
    sa.Column('department_long', sa.String(), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=True),
    sa.Column('course_number', sa.String(), nullable=True),
    sa.Column('admin_approved', sa.Boolean(), nullable=True),
    sa.Column('contributed_user_id', sa.Integer(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contributed_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stripe_recipient_id', sa.String(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('card_last4', sa.String(), nullable=True),
    sa.Column('card_type', sa.String(), nullable=True),
    sa.Column('time_added', sa.String(), nullable=True),
    sa.Column('is_payment_card', sa.Boolean(), nullable=True),
    sa.Column('is_transfer_card', sa.Boolean(), nullable=True),
    sa.Column('stripe_token', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_default_payment', sa.Boolean(), nullable=True),
    sa.Column('is_default_transfer', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('cordova', sa.String(), nullable=True),
    sa.Column('platform', sa.String(), nullable=True),
    sa.Column('uuid', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('time_uploaded', sa.DateTime(), nullable=True),
    sa.Column('time_sent', sa.DateTime(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('referral',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('reward', sa.Float(), nullable=True),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('time_redeemed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user-campaign_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('campaign_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaign.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('guru-course_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('student-course_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user-major_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['major_id'], ['major.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('university-major_assoc',
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['major_id'], ['major.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], )
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('in_person', sa.Boolean(), nullable=True),
    sa.Column('online', sa.Boolean(), nullable=True),
    sa.Column('time_estimate', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_processed', sa.DateTime(), nullable=True),
    sa.Column('time_updated', sa.DateTime(), nullable=True),
    sa.Column('time_disputed', sa.DateTime(), nullable=True),
    sa.Column('time_refunded', sa.DateTime(), nullable=True),
    sa.Column('deactivated', sa.Boolean(), nullable=True),
    sa.Column('amount_refunded', sa.Float(), nullable=True),
    sa.Column('student_amount', sa.Float(), nullable=True),
    sa.Column('guru_amount', sa.Float(), nullable=True),
    sa.Column('stripe_amount', sa.Float(), nullable=True),
    sa.Column('stripe_error_string', sa.String(), nullable=True),
    sa.Column('profit', sa.Float(), nullable=True),
    sa.Column('charge_id', sa.String(), nullable=True),
    sa.Column('transfer_id', sa.String(), nullable=True),
    sa.Column('refund_id', sa.String(), nullable=True),
    sa.Column('balance_transaction_id', sa.String(), nullable=True),
    sa.Column('balance_before', sa.Float(), nullable=True),
    sa.Column('balance_after', sa.Float(), nullable=True),
    sa.Column('transfer_status', sa.String(), nullable=True),
    sa.Column('charge_status', sa.String(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('cashout_guru_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], ),
    sa.ForeignKeyConstraint(['cashout_guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proposal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_updated', sa.DateTime(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('guru_rank', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calendar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_modified', sa.DateTime(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('proposal_id', sa.Integer(), nullable=True),
    sa.Column('start_day', sa.DateTime(), nullable=True),
    sa.Column('number_of_days', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seconds', sa.Integer(), nullable=True),
    sa.Column('minutes', sa.Integer(), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('in_person', sa.Boolean(), nullable=True),
    sa.Column('online', sa.Boolean(), nullable=True),
    sa.Column('time_estimate', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('relationship_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('proposal_id', sa.Integer(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_updated', sa.DateTime(), nullable=True),
    sa.Column('time_completed', sa.DateTime(), nullable=True),
    sa.Column('displayed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], ),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], ),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], ),
    sa.ForeignKeyConstraint(['relationship_id'], ['relationship.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_sent', sa.DateTime(), nullable=True),
    sa.Column('time_seen', sa.DateTime(), nullable=True),
    sa.Column('contents', sa.String(), nullable=True),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('relationship_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['relationship_id'], ['relationship.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('altitude_accuracy', sa.Float(), nullable=True),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('description', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('impacted_user_id', sa.Integer(), nullable=True),
    sa.Column('impacted_user_notified', sa.Boolean(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('proposal_id', sa.Integer(), nullable=True),
    sa.Column('relationship_id', sa.Integer(), nullable=True),
    sa.Column('rank_guru_id', sa.Integer(), nullable=True),
    sa.Column('estimated_rank_after', sa.Integer(), nullable=True),
    sa.Column('official_rank_before', sa.Integer(), nullable=True),
    sa.Column('official_rank_after', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['impacted_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], ),
    sa.ForeignKeyConstraint(['rank_guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['relationship_id'], ['relationship.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_resolved', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calendar_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_id', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('is_student', sa.Boolean(), nullable=True),
    sa.Column('is_guru', sa.Boolean(), nullable=True),
    sa.Column('is_mutual', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendar.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('_type', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('time_created', sa.String(), nullable=True),
    sa.Column('time_updated', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('relationship_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['relationship_id'], ['relationship.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('file')
    op.drop_table('calendar_event')
    op.drop_table('support')
    op.drop_table('event')
    op.drop_table('position')
    op.drop_table('message')
    op.drop_table('session')
    op.drop_table('calendar')
    op.drop_table('proposal')
    op.drop_table('transaction')
    op.drop_table('request')
    op.drop_table('university-major_assoc')
    op.drop_table('user-major_assoc')
    op.drop_table('student-course_assoc')
    op.drop_table('guru-course_assoc')
    op.drop_table('user-campaign_assoc')
    op.drop_table('referral')
    op.drop_table('batch')
    op.drop_table('device')
    op.drop_table('card')
    op.drop_table('course')
    op.drop_table('rating')
    op.drop_table('major')
    op.drop_table('relationship')
    op.drop_table('user')
    op.drop_table('build')
    op.drop_table('recipient')
    op.drop_table('department')
    op.drop_table('campaign')
    op.drop_table('version')
    op.drop_table('university')
    ### end Alembic commands ###
