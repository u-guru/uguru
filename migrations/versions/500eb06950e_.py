"""empty message

Revision ID: 500eb06950e
Revises: 3690f4520381
Create Date: 2015-05-13 07:52:46.131142

"""

# revision identifiers, used by Alembic.
revision = '500eb06950e'
down_revision = '3690f4520381'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.Column('time_started', sa.DateTime(), nullable=True),
    sa.Column('time_completed', sa.DateTime(), nullable=True),
    sa.Column('length_seconds', sa.Integer(), nullable=True),
    sa.Column('level_reached', sa.Integer(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['university_id'], ['university.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('times_referenced', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('last_referenced', sa.String(), nullable=True),
    sa.Column('linked_tags', sa.String(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user-tag_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('course-tag_assoc',
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('request-tag_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guru-queue_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('queue_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['queue_id'], ['queue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_type', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_size', sa.String(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('contributed_user_id', sa.Integer(), nullable=True),
    sa.Column('time_uploaded', sa.DateTime(), nullable=True),
    sa.Column('times_accessed', sa.Integer(), nullable=True),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('downvotes', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('semester_id', sa.Integer(), nullable=True),
    sa.Column('year_id', sa.Integer(), nullable=True),
    sa.Column('professor_name', sa.String(), nullable=True),
    sa.Column('course_string', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['contributed_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guru-resource_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user-resource_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('resource-tag_assoc',
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.drop_constraint(u'calendar_request_id_fkey', 'calendar', type_='foreignkey')
    op.drop_constraint(u'calendar_proposal_id_fkey', 'calendar', type_='foreignkey')
    op.drop_column(u'calendar', 'proposal_id')
    op.drop_column(u'calendar', 'request_id')
    op.add_column(u'event', sa.Column('queue_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'event', 'queue', ['queue_id'], ['id'])
    op.add_column(u'request', sa.Column('_type', sa.Integer(), nullable=True))
    op.add_column(u'request', sa.Column('anonymous', sa.Boolean(), nullable=True))
    op.add_column(u'request', sa.Column('giphy_url', sa.String(), nullable=True))
    op.add_column(u'request', sa.Column('public_post', sa.Boolean(), nullable=True))
    op.add_column(u'request', sa.Column('student_price', sa.Float(), nullable=True))
    op.add_column(u'request', sa.Column('urgency', sa.Integer(), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'request', 'urgency')
    op.drop_column(u'request', 'student_price')
    op.drop_column(u'request', 'public_post')
    op.drop_column(u'request', 'giphy_url')
    op.drop_column(u'request', 'anonymous')
    op.drop_column(u'request', '_type')
    op.drop_constraint(None, 'event', type_='foreignkey')
    op.drop_column(u'event', 'queue_id')
    op.add_column(u'calendar', sa.Column('request_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column(u'calendar', sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'calendar_proposal_id_fkey', 'calendar', 'proposal', ['proposal_id'], ['id'])
    op.create_foreign_key(u'calendar_request_id_fkey', 'calendar', 'request', ['request_id'], ['id'])
    op.drop_table('resource-tag_assoc')
    op.drop_table('user-resource_assoc')
    op.drop_table('guru-resource_assoc')
    op.drop_table('resource')
    op.drop_table('guru-queue_assoc')
    op.drop_table('queue')
    op.drop_table('request-tag_assoc')
    op.drop_table('course-tag_assoc')
    op.drop_table('user-tag_assoc')
    op.drop_table('tag')
    op.drop_table('game')
    ### end Alembic commands ###
