"""empty message

Revision ID: 21a2c7aba6ef
Revises: None
Create Date: 2014-11-28 17:34:57.914251

"""

# revision identifiers, used by Alembic.
revision = '21a2c7aba6ef'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rating',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('student_rating', sa.Float(), nullable=True),
    sa.Column('tutor_rating', sa.Float(), nullable=True),
    sa.Column('meeting_exist', sa.Boolean(), nullable=True),
    sa.Column('student_rating_description', sa.String(length=256), nullable=True),
    sa.Column('tutor_rating_description', sa.String(length=256), nullable=True),
    sa.Column('tutor_no_meet_description', sa.String(length=256), nullable=True),
    sa.Column('student_no_meet_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.SmallInteger(), nullable=True),
    sa.Column('end_time', sa.SmallInteger(), nullable=True),
    sa.Column('week_day', sa.SmallInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('connected_tutor_id', sa.Integer(), nullable=True),
    sa.Column('connected_tutor_hourly', sa.Float(), nullable=True),
    sa.Column('student_secret_code', sa.String(), nullable=True),
    sa.Column('professor', sa.String(), nullable=True),
    sa.Column('student_estimated_hour', sa.Integer(), nullable=True),
    sa.Column('num_students', sa.Integer(), nullable=True),
    sa.Column('tutor_offer_hour', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('available_time', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('remote', sa.Boolean(), nullable=True),
    sa.Column('cancellation_reason', sa.String(), nullable=True),
    sa.Column('is_expired', sa.Boolean(), nullable=True),
    sa.Column('urgency', sa.SmallInteger(), nullable=True),
    sa.Column('frequency', sa.SmallInteger(), nullable=True),
    sa.Column('time_estimate', sa.Float(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_connected', sa.DateTime(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('estimated_hourly', sa.Float(), nullable=True),
    sa.Column('actual_hourly', sa.Float(), nullable=True),
    sa.Column('actual_time', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sid', sa.String(), nullable=True),
    sa.Column('to_phone', sa.String(), nullable=True),
    sa.Column('from_phone', sa.String(), nullable=True),
    sa.Column('body', sa.Unicode(length=1600), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_sent', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('flags', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('uri', sa.String(), nullable=True),
    sa.Column('account_sid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('week',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.SmallInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('parent_name', sa.String(), nullable=True),
    sa.Column('parent_email', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('school_email', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('is_a_tutor', sa.Boolean(), nullable=True),
    sa.Column('fb_account', sa.Boolean(), nullable=True),
    sa.Column('phone_number', sa.String(length=64), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('email_notification', sa.Boolean(), nullable=True),
    sa.Column('text_notification', sa.Boolean(), nullable=True),
    sa.Column('push_notification', sa.Boolean(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('tutor_introduction', sa.String(length=1000), nullable=True),
    sa.Column('qualifications', sa.String(length=5000), nullable=True),
    sa.Column('advertised_rate', sa.Float(), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=True),
    sa.Column('user_referral_code', sa.String(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('approved_by_admin', sa.Boolean(), nullable=True),
    sa.Column('auth_token', sa.String(length=64), nullable=True),
    sa.Column('apn_token', sa.String(length=64), nullable=True),
    sa.Column('verified_tutor', sa.Boolean(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('credit', sa.Float(), nullable=True),
    sa.Column('pending', sa.Float(), nullable=True),
    sa.Column('total_earned', sa.Float(), nullable=True),
    sa.Column('discoverability', sa.Boolean(), nullable=True),
    sa.Column('major', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('secret_code', sa.String(), nullable=True),
    sa.Column('previous_tutor', sa.Boolean(), nullable=True),
    sa.Column('slc_tutor', sa.Boolean(), nullable=True),
    sa.Column('hkn_tutor', sa.Boolean(), nullable=True),
    sa.Column('ta_tutor', sa.Boolean(), nullable=True),
    sa.Column('res_tutor', sa.Boolean(), nullable=True),
    sa.Column('la_tutor', sa.Boolean(), nullable=True),
    sa.Column('high_tutor', sa.Boolean(), nullable=True),
    sa.Column('msg_notif', sa.Integer(), nullable=True),
    sa.Column('feed_notif', sa.Integer(), nullable=True),
    sa.Column('settings_notif', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.String(), nullable=True),
    sa.Column('customer_last4', sa.String(length=4), nullable=True),
    sa.Column('customer_card_type', sa.String(length=4), nullable=True),
    sa.Column('recipient_id', sa.String(), nullable=True),
    sa.Column('recipient_last4', sa.String(length=4), nullable=True),
    sa.Column('recipient_card_type', sa.String(length=4), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('email',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('mandrill_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('time_amount', sa.Float(), nullable=True),
    sa.Column('tutor_rate', sa.Float(), nullable=True),
    sa.Column('student_paid_amount', sa.Float(), nullable=True),
    sa.Column('tutor_received_amount', sa.Float(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('stripe_charge_id', sa.String(), nullable=True),
    sa.Column('stripe_recipient_id', sa.String(), nullable=True),
    sa.Column('student_description', sa.String(), nullable=True),
    sa.Column('tutor_description', sa.String(), nullable=True),
    sa.Column('tutor_confirmed', sa.Boolean(), nullable=True),
    sa.Column('student_confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmed_time_amount', sa.Float(), nullable=True),
    sa.Column('confirmed_tutor_rate', sa.Float(), nullable=True),
    sa.Column('confirmed_payment_id', sa.Integer(), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.Column('refunded', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('credits_used', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feed_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('request_tutor_amount_hourly', sa.Float(), nullable=True),
    sa.Column('request_tutor_id', sa.Float(), nullable=True),
    sa.Column('skill_name', sa.String(), nullable=True),
    sa.Column('custom', sa.String(length=1000), nullable=True),
    sa.Column('custom_tag', sa.String(), nullable=True),
    sa.Column('extra_detail', sa.String(length=2500), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('time_read', sa.DateTime(), nullable=True),
    sa.Column('feed_message', sa.String(length=1000), nullable=True),
    sa.Column('feed_message_subtitle', sa.String(length=1000), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.Column('a_id_name', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unsubscribe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('campaign', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('time_used', sa.DateTime(), nullable=True),
    sa.Column('future_time_used', sa.DateTime(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=64), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('is_course', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student-rating-table',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], )
    )
    op.create_table('tutor-rating-table',
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], ),
    sa.ForeignKeyConstraint(['tutor_id'], ['user.id'], )
    )
    op.create_table('user-payment_assoc',
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user-skill_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('request-weeks_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('week_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['week_id'], ['week.id'], )
    )
    op.create_table('week-ranges_assoc',
    sa.Column('week_id', sa.Integer(), nullable=True),
    sa.Column('range_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['range_id'], ['range.id'], ),
    sa.ForeignKeyConstraint(['week_id'], ['week.id'], )
    )
    op.create_table('mailbox',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request-email_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('email_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['email_id'], ['email.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], )
    )
    op.create_table('user-promo_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('promo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['promo_id'], ['promo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user-notification_assoc',
    sa.Column('notification_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user-email_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['email_id'], ['email.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student-skill_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], )
    )
    op.create_table('tutor-skill_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], )
    )
    op.create_table('user-text_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('text_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['text_id'], ['text.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('committed-tutor-skill_assoc',
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], )
    )
    op.create_table('pending-rating-table',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('rating_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rating_id'], ['rating.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], )
    )
    op.create_table('conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('guru_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guru_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user-conversation_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contents', sa.Unicode(length=1000), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('write_time', sa.DateTime(), nullable=True),
    sa.Column('reciever_id', sa.Integer(), nullable=True),
    sa.Column('read_time', sa.DateTime(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['reciever_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request-convo_assoc',
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], )
    )
    op.create_table('mailbox-conversation_assoc',
    sa.Column('mailbox_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['mailbox_id'], ['mailbox.id'], )
    )
    op.create_table('mailbox-message_assoc',
    sa.Column('mailbox_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mailbox_id'], ['mailbox.id'], ),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], )
    )
    op.create_table('user-message_assoc',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('tag',
    sa.Column('name', sa.String(length=16), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.PrimaryKeyConstraint('message_id', 'conversation_id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag')
    op.drop_table('user-message_assoc')
    op.drop_table('mailbox-message_assoc')
    op.drop_table('mailbox-conversation_assoc')
    op.drop_table('request-convo_assoc')
    op.drop_table('message')
    op.drop_table('user-conversation_assoc')
    op.drop_table('conversation')
    op.drop_table('pending-rating-table')
    op.drop_table('committed-tutor-skill_assoc')
    op.drop_table('user-text_assoc')
    op.drop_table('tutor-skill_assoc')
    op.drop_table('student-skill_assoc')
    op.drop_table('course')
    op.drop_table('user-email_assoc')
    op.drop_table('user-notification_assoc')
    op.drop_table('user-promo_assoc')
    op.drop_table('request-email_assoc')
    op.drop_table('mailbox')
    op.drop_table('week-ranges_assoc')
    op.drop_table('request-weeks_assoc')
    op.drop_table('user-skill_assoc')
    op.drop_table('user-payment_assoc')
    op.drop_table('tutor-rating-table')
    op.drop_table('student-rating-table')
    op.drop_table('skill')
    op.drop_table('promo')
    op.drop_table('unsubscribe')
    op.drop_table('notification')
    op.drop_table('payment')
    op.drop_table('email')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('week')
    op.drop_table('text')
    op.drop_table('request')
    op.drop_table('range')
    op.drop_table('rating')
    ### end Alembic commands ###
